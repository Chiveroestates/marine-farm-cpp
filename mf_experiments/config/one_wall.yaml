#
# Configuration for the one wall experiment
#

simu:
  clock_publisher:
    publish_rate: 200  # frequency (Hz) of publish on the /clock topic (ROS frequency)
    time_factor: 2.0   # time factor of the simulation (1.0 for same as wall time)

  #
  # Parameters changed from farm_simulator
  #
  farm_nodelet:
    random_seed: 1  # seed for random numbers (0 for random seed)

    # Algae lines generation
    nbr_lines: 1            # number of algae lines
    length_lines: 30        # length (m) of each line

    # Randomisation of algae lines' position
    randomise_lines: false  # whether to randomise the position of each line
    phi_lines: 0.0          # mean of the 1st angle for the 1st point of each line
    theta_lines: 0.0        # mean of the 2nd angle for the 1st point of each line

    # Algae generation
    randomise_algae: false  # whether to randomise the size and orientation of algae
    alga_miss_rate: 0.0     # probability to have a missing alga
    nbr_algae: 1            # max nbr of algae per line
    width_algae: 30         # mean of the width of an alga
    length_algae: 2.0       # mean of the length of an alga
    thickness_algae: 0.01   # thickness of an alga (for collision detection)
    psi_algae: 0.0          # mean of the algae orientation

    # Algae disease
    disp_disease: true   # whether to display the disease heatmaps
    disease_ratio: 1.0    # ratio of alga disease (0->fully sane, 1->fully sick)
    height_disease_heatmap: 100  # height of the algae disease heatmap
    width_disease_heatmap: 1000  # width of the algae disease heatmap
    height_grid_heatmap: 2  # height of the grid for perlin noise generation
    width_grid_heatmap: 30  # width of the grid for perlin noise generation

  #
  # Parameters changed from robot_simulator
  #
  robot_simulator:
    # Model parameters
    init_state: [1.0, 0.0, 2.8,  # x, y, z (position)
                 0, 0, -1.5707963,  # phi, theta, psi (orientation)
                 0, 0, 0,  # u, v, w (linear speed)
                 0, 0, 0,  # p, q, r (angular speed)
                 0.0]      # delta_m (ballast)

nav:
  planning_logic:
    wp_file_name: 'resources/one_wall_wp.txt'  # path to the file containing the transition waypoints
    transition_file_name: 'resources/one_wall_transitions.txt'  # path to the file containing the points delimiting the transitions

experiments:
  traj_publisher:
    path_freq: 1.0  # publish frequency of the path
    path_frame: 'ocean'  # frame in which the path is expressed
    plan_res: 0.1        # spatial resolution (m) of the planned trajectory
    wp_file_name: 'resources/back_forth_wp.txt'  # relative path of the text file containing the waypoints

  experiment_stats:
    main_freq: 10.0                         # frequency of the main loop
    out_file_name: '/tmp/one_wall_out.csv'  # path of the output file for the results of the test
    save_gp: false                           # whether to save the GP mean at the end
    load_gp: false                           # whether to load the GP mean at the beginning
    gp_file_name: '/tmp/gp_mean.txt'        # path of the saved GP mean
