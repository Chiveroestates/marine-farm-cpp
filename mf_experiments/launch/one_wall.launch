<launch>
  <!-- Launchfile arguments -->
  <arg name="rviz" value="true" />
  <arg name="display_img_gp" value="false" />
  <arg name="display_cov_gp" value="false" />

  <arg name="path_planning" value="true" />
  <arg name="mpc_control" value="true" />

  <arg name="accelerate_time" value="false" />
  <arg name="cart_control" value="false" />
  <arg name="back_forth_traj" value="false" />
  <arg name="experiment_stats" value="false" />

  <!-- ROS parameters -->
  <rosparam file="$(find mf_farm_simulator)/config/farm_simulator.yaml" command="load" ns="simu" />
  <rosparam file="$(find mf_robot_simulator)/config/robot_simulator.yaml" command="load" ns="simu" />
  <rosparam file="$(find mf_sensors_simulator)/config/sensors_simulator.yaml" command="load" ns="simu" />
  <rosparam file="$(find mf_mapping)/config/mapping.yaml" command="load" ns="nav" />
  <rosparam file="$(find mf_navigation)/config/navigation.yaml" command="load" ns="nav" />
  <rosparam file="$(find mf_experiments)/config/one_wall.yaml" command="load" />
  <param name="/use_sim_time" value="$(arg accelerate_time)" />

  <!-- Static transforms -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_ocean" args="0 0 0 0 0 3.14159265359 world ocean" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_wall" args="0 0 -2.1 0 1.5707963267948966 0 world wall" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_base_camera" args="0 0 0 0 0 1.5707963267948966 base_link camera" />

  <!-- Simulation -->
  <group ns="simu">
    <node name="clock_publisher" type="clock_publisher" pkg="mf_experiments" if="$(arg accelerate_time)" output="screen" />

    <node pkg="nodelet" type="nodelet" args="manager" name="simu_nodelet_manager" output="screen" />

    <!-- Farm simulator -->
    <node pkg="nodelet" type="nodelet" args="load mf_farm_simulator/FarmNodelet simu_nodelet_manager"
      name="farm_nodelet" output="screen" />

    <!-- Sensors simulator -->
    <node pkg="nodelet" type="nodelet" args="load mf_sensors_simulator/CameraNodelet simu_nodelet_manager"
      name="camera_nodelet" output="screen">
      <remap from="camera_nodelet/algae" to="farm_nodelet/algae" />
    </node>

    <!-- Robot simulator -->
    <node name="robot_simulator" type="robot_simulator" pkg="mf_robot_simulator"
      output="screen" />
  </group>


  <!-- Navigation -->
  <group ns="nav">
    <!-- launch-prefix="gdb -ex run - -args" -->
    <!-- launch-prefix="valgrind - -tool=memcheck - -leak-check=yes - -track-origins=yes - -log-file=/tmp/TEST4.log"  -->
    <node pkg="nodelet" type="nodelet" args="manager" name="nav_nodelet_manager" output="screen" />

    <!-- Mapping -->
    <node pkg="nodelet" type="nodelet" args="load mf_mapping/GPNodelet nav_nodelet_manager"
      name="gp_nodelet" output="screen">
      <remap from="camera_out" to="/simu/camera_out" />
    </node>

    <!-- Planning -->
    <node pkg="nodelet" type="nodelet" args="load mf_navigation/PlanningNodelet nav_nodelet_manager"
      name="planning_nodelet" output="screen" if="$(arg path_planning)">
      <remap from="~model_constants" to="/simu/robot_simulator/model_constants" />
      <remap from="~bnd_input" to="/simu/robot_simulator/bnd_input" />

      <remap from="state" to="/simu/robot_simulator/state" />
      <remap from="raycast_multi" to="/simu/raycast_multi" />
    </node>

    <!-- Control -->
    <node pkg="nodelet" type="nodelet" args="load mf_navigation/CartControlNodelet nav_nodelet_manager"
      name="cart_control_nodelet" output="screen" if="$(arg cart_control)" >
      <remap from="pose_output" to="/simu/robot_simulator/pose_input" />
    </node>

    <!-- <node pkg="nodelet" type="nodelet" args="manager" name="mpc_nodelet_manager" output="screen"
      launch-prefix="valgrind - -tool=callgrind - -callgrind-out-file='callgrind.listener.%p' "/> -->
    <!-- <node pkg="nodelet" type="nodelet" args="manager" name="mpc_nodelet_manager" output="screen"
      launch-prefix="gdb -ex run - -args" /> -->

    <node name="mpc_node" type="mpc_node" pkg="mf_navigation" output="screen" if="$(arg mpc_control)">
      <remap from="~model_constants" to="/simu/robot_simulator/model_constants" />
      <remap from="~bnd_delta_m" to="/simu/robot_simulator/bnd_delta_m" />
      <remap from="~bnd_input" to="/simu/robot_simulator/bnd_input" />

      <remap from="~state" to="/simu/robot_simulator/state" />
      <remap from="~path" to="/nav/path" />
      <remap from="~command" to="/simu/robot_simulator/control_input" />
      <remap from="~expected_traj" to="/nav/expected_traj" />
    </node>
  </group>

  <!-- Experimentation tools -->
  <group ns="experiments">
    <node name="traj_publisher" type="traj_publisher" pkg="mf_experiments" output="screen" if="$(arg back_forth_traj)">
      <remap from="~path" to="/nav/path" />
    </node>

    <node name="experiment_stats" type="experiment_stats" pkg="mf_experiments" output="screen" if="$(arg experiment_stats)">
      <remap from="~odom" to="/simu/robot_simulator/odom" />
      <remap from="~path" to="/nav/path" />
    </node>

  </group>

  <!-- Visualisation -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find mf_experiments)/rviz/mfcpp.rviz" if="$(arg rviz)" />

  <node type="image_view" name="display_img_gp" pkg="image_view" if="$(arg display_img_gp)">
    <remap from="image" to="/nav/gp_wall_img" />
  </node>
  <node type="image_view" name="display_cov_gp" pkg="image_view" if="$(arg display_cov_gp)">
    <remap from="image" to="/nav/gp_cov_img" />
  </node>

</launch>
