planning_nodelet:
  main_freq: 1.0
  ocean_frame: "ocean"
  wall_frame: "wall"
  robot_frame: "base_link"
  camera_frame: "camera"

  horiz_motion: false  # whether to allow motion in the horizontal plane
  vert_motion: true    # whether to allow motion in the vertical plane
  linear_path: false   # whether to create a linear path, or a spline one
  plan_speed: 1.0      # planned speed (m/s) of the robot
  plan_horizon: 1.5    # horizon (m) of the planning
  plan_res: 0.1        # spatial resolution (m) of the planned trajectory
  lattice_res: 0.4     # resolution (m) of the waypoints lattice
  min_wall_dist: 0.2   # minimum distance to the wall that can be planned
  gp_weight: 100       # weight attributed to the Gaussian Process values in viewpoint selection

  camera_height: 5  # number of pixels of the camera along height (-1 for actual camera size)
  camera_width: 10  # number of pixels of the camera along width  (-1 for actual camera size)


cart_control_nodelet:
  main_freq: 10
  speed: 0.2  # desired robot speed


mpc_node:
  main_freq: 10
  fixed_frame: "ocean"

  desired_speed: 0.5  # desired speed (m/s) of the robot
  time_horizon: 5.0   # time horizon (s) for the MPC prediction
  nbr_steps: 10       # number of steps for the MPC prediction
  disable_vbs: false   # whether to disable the Variable Buoyancy System (VBS)

  P: [100.0, 100.0, 100.0,
      10000.0, 10000.0, 10000.0,
      0.001, 0.001, 0.001,
      0.001, 0.001, 0.001,
      1.0]  # diagonal of the penalty on the last state error
  Q_x: [10000.0, 10000.0, 10000.0,
        0.00000001, 0.00000001, 0.00000001,
        0.1, 0.1, 0.1,
        0.1, 0.1, 0.1,
        0.1]  # diagonal of the penalty on the intermediary states error
  R_u: [0.001, 0.001, 0.001, 10000000.0]      # diagonal of the penalty on the control input error
  R_delta: [0.0, 0.05, 0.05, 0.0]  # diagonal of the penalty on the control change rate
